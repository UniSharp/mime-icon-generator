//VARS
$icon-color: #F1F2F2;
$icon-edge-color: "";
$font-size: 39.5;
$icon-container-size: 110px;
$style: "default"; // possible values: default || dark || light || double

//
// Import icons
//

@font-face {
  font-family: 'Material Icons';
  font-style: normal;
  font-weight: 400;
  src: url(https://fonts.gstatic.com/s/materialicons/v29/2fcrYFNaTjcS6g4U3t-Y5ZjZjT5FdEJ140U2DJYC3mY.woff2) format('woff2');
}

.material-icons {
  font-family: 'Material Icons';
  font-weight: normal;
  font-style: normal;
  font-size: 24px;
  line-height: 1;
  letter-spacing: normal;
  text-transform: none;
  display: inline-block;
  white-space: nowrap;
  word-wrap: normal;
  direction: ltr;
  -webkit-font-feature-settings: 'liga';
  -webkit-font-smoothing: antialiased;
}

//Colors (used when another color isn't specified)
$icon-colours: 
	#b1375e,
	#db4f42,
	#f29b00,
	#bfcb3e,
	#8db157,
	#50abb5,
	#5277de,
	#6963c5;

// Icons (the corrispong ascii)

$settings: "\E8B8";
$locked: "\E88D";
$flag: "\E3A0";
$work: "\E8F9";
$build: "\E869";
$malware: "\E868";
$map: "\E8B4";
$coffee: "\EB44";
$apk: "\E859";
$usb: "\E1E0";
$cloud: "\E3DD";
$attachment: "\E2BC";

$zip: "\E3E7";

$music: "\E3A1";
$mic: "\E029";
$radio: "\E03E";
$audio: "\E050";
$lp: "\E019";

$photo: "\E3B0";
$picture: "\E3B7";

$play: "\E037";
$movie: "\E02C";
$cam: "\E04B";

$text: "\E262";
$stylez: "\E91D";
$app: "\E051";
$code: "\E86F";

$calendar: "\E8DF";
$epub: "\E54B";


// icon with google font icons
$icon-list:
(mime-icons, aac,  "", $audio),
(mime-icons, abw,  "", $settings),
(mime-icons, arc,  "", $locked),
(mime-icons, apk,  "", $apk),
(mime-icons, azw,  "", $flag),
(mime-icons, avi,  "", $play),
(mime-icons, bin,  "", $work),
(mime-icons, bz,   "", $zip),
(mime-icons, bz2,  "", $zip),
(mime-icons, csh,  "", $malware),
(mime-icons, css,  "", $stylez),
(mime-icons, csv,  "", $code),
(mime-icons, doc,  hsl(210,90%,40%), $text),
(mime-icons, eot,  "", $attachment),
(mime-icons, epub, "", $epub),
(mime-icons, gif,  "", $picture),
(mime-icons, html, "", $code),
(mime-icons, ico,  "", $app),
(mime-icons, ics,  "", $cloud),
(mime-icons, usb,  "", $usb),
(mime-icons, js,  "", $malware),
(mime-icons, jar,  "", $radio),
(mime-icons, txt,  "", $text),
(mime-icons, php,  "", $code),

(mime-icons, flac,  "", $lp),
(mime-icons, wma,  "", $radio),
(mime-icons, mp3,  "", $music),
(mime-icons, pcm,  "", $mic),
(mime-icons, aiff,  "", $audio),
(mime-icons, ogg,  "", $play),
(mime-icons, wav,  "", $audio),
(mime-icons, rtf,   "", $text),
(mime-icons, docx,  "", $text),
(mime-icons, mp4,  "", $play),
(mime-icons, mov,  "", $movie),
(mime-icons, flv,  "", $cam),
(mime-icons, swf,  "", $malware),
(mime-icons, mpeg,  "", $movie),
(mime-icons, wmv, "", $play),
(mime-icons, mkv,  "", $cam);



////// DO-ICON MIXIN USAGE
/////
///// -> do-icon($background-color, $edge-color, $text, $text-color, $icon, $icon-color);
///// +> @include do-icon(#009688, lighten(#009688, 20%), "", "");
///
// $background-color: the background of the document image (A color is expected - REQUIRED)
// $edge-color: the color of corner edge
// $text: the type of mime type
// $text-color: the color of the text containing file extension (A color is expected)
// $icon: inject an icon inside the document model

@mixin do-icon($background-color: #888, $edge-color:null, $text: null, $text-color:"#F1F2F2", $icon:null ) {
	
	@if (type-of($edge-color) != 'color') { $edge-color: lighten($background-color, 20%)}
	@if (type-of($text-color) != 'color') { $text-color: "#F1F2F2"}
  @if (type-of($text) != 'string') and ($text) { $text: "@#!"}

	background-image: url('data:image/svg+xml;utf8,<svg class="icon-model" xmlns="http://www.w3.org/2000/svg" x="0px" y="0px" width="200px" height="200px" viewBox="0 0 200 200" enable-background="new 0 0 200 200" xml:space="preserve"> <path fill="#{$background-color}" d="M112.6,58.3V0.1H32.9C30.7,0.1,29,1.8,29,4 v192.2c0,2.1,1.7,3.9,3.9,3.9h134.2c2.1,0,3.9-1.7,3.9-3.9V58.3H112.6z"/> #{$icon} <text transform="matrix(1 0 0 1 100 171)" class="icon-text" text-anchor="middle" width="120" height="50" opacity="0.95" fill="#{$text-color}" font-family="Tahoma-Bold" style="font-family: &quot;Myriad Pro&quot;, Myriad, Tahoma-Bold, Helvetica, Arial, sans-serif; font-weight: bold; font-style: normal;text-shadow: 0 1px 0 rgba(0,0,0,0.05);" font-size="#{$font-size}">#{$text}</text><polygon fill="#{$edge-color}" points="112.6,0 171,58.3 112.6,58.3"/><polygon opacity="0.1" fill="#010202" points="170.9,116.5 112.6,58.3 170.9,58.3"/></svg>');
}

////// basic css 
.demo {
	background-color: rgba(0,0,0,0.1);
	padding: 40px;
}

.mime-icon {
	margin: 0;
	display: inline-block;
	vertical-align:top;
	position: relative;
	.ico {
	position:relative;

		&:before{
			position: absolute;
			top: $icon-container-size / 2.7;
			display:block;
			width:100%;
			overflow: visible;
			z-index:9;
			content:'';
			font-family: 'Material Icons';
			font-size: $icon-container-size / 4.2;
			color: $icon-color;
			opacity: 0.8;		
		}
		

		&:after{
			width: $icon-container-size;
			height: $icon-container-size;
			display:inline-block;
			content:'';

			background-size: 80%;
			background-position: center;
			background-repeat: no-repeat;
			@include do-icon();
		}
	}
	

	.ico-magenta:after { @include do-icon(#d9006c);}
	.ico-yellow:after {	@include do-icon(#f9ca15);}
	.ico-blue:after { @include do-icon(#0d75dd);}
	
	i.material-icons {
		position: absolute;
		top: 33%;
		left: 0;
		right: 0;
		font-size: 28px;
		color: $icon-color;
		opacity: 0.8;
	}
}


////// "Each" nÂ°1 icon with Google font icon
//
$colors-number: length($icon-colours);
$actual-icon-color: 1;

@each $mimitype, $filetype, $icon-background-color, $icon in $icon-list {
		
	@if (type-of($icon-background-color) != 'color') and ($icon-background-color) {  // if background isn't a color
    @if ($style == "dark") {
      $icon-background-color: #3a3b3c;
      $icon-edge-color: nth($icon-colours, $actual-icon-color); // the color is a color from the $icon-colours array
    
    } @elseif ($style == "light") {
      $icon-background-color: #F1F2F2;
      $icon-edge-color: nth($icon-colours, $actual-icon-color); 
    
    } @elseif ($style == "double") {
      $icon-background-color: nth($icon-colours, $actual-icon-color);
      $icon-edge-color: "";
      
    } @else {
      $icon-background-color: nth($icon-colours, $actual-icon-color); 
      $icon-edge-color: "";
    }
		
		@if ($actual-icon-color < $colors-number  ) { // Prepare the next color then increase the index counter 
			$actual-icon-color: $actual-icon-color + 1; 
		} @else {
			$actual-icon-color: 1;
		}
    
	}
  
	// STYLE
	.mime-icon.ico-#{$mimitype} .ico:after,
  .mime-icon.ico-#{$filetype} .ico:after {
		@include do-icon($icon-background-color, $icon-edge-color, to-upper-case($filetype), "", $icon );
	}
	.mime-icon.ico-#{$mimitype} .ico:before,
  .mime-icon.ico-#{$filetype} .ico:before {
		content:$icon;
	}
}


// HARDCODED styles
//
//
//

.mime-icon {
	&.abc .ico:after { @include do-icon(desaturate(hsla(15, 90%, 55%, 1), 15%), "", "ABC");}
	&.def .ico:after  { @include do-icon(desaturate(hsla(80, 75%, 47%, 1), 15%), "", "DEF");}
	&.ghi .ico:after  { @include do-icon(desaturate(hsla(270, 60%, 55%, 1), 15%), "", "GHI");}

	&.light {
		// if you want to chage the color of a svg shape 
		// you must change the variables inside the class scope 
		// then execute the mixin like usual. 
		// variables will remain inside the scope where are declarated
		//
		$icon-color: #666666;
		.ico:before{
      color: $icon-color;
    }
		.ico:after {
			filter: drop-shadow( 0 2px 2px rgba(0, 0, 0, 0.25) );
		}
		&.ico-mp3 .ico:after { @include do-icon(#f1f2f2, desaturate(#05ad9d, 15%), "MP3", #888, "" );}
		&.ico-pcm .ico:after { @include do-icon(#f1f2f2,desaturate(#8BC34A, 15%), "PCM", #888, "" );}
		&.ico-ogg .ico:after { @include do-icon(#f1f2f2,desaturate(#CDDC39, 15%), "OGG", #888, "" );}
		&.ico-wav .ico:after { @include do-icon(#f1f2f2,desaturate(#FFC107, 15%), "WAV", #888, "" );}
		&.ico-aac .ico:after { @include do-icon(#f1f2f2,desaturate(#F44336, 15%), "AAC", #888, "" );}
		&.ico-aiff .ico:after { @include do-icon(#f1f2f2,desaturate(#E91E63, 15%), "AIFF", #888, "" );}
		&.ico-wma .ico:after { @include do-icon(#f1f2f2,desaturate(#9C27B0, 15%), "WMA", #888, "" );}
		&.ico-html .ico:after { @include do-icon(#f1f2f2,desaturate(#3F51B5, 15%), "HTML", #888, "" );}
    
		&.ico-js .ico:after { @include do-icon(#f1f2f2,desaturate(#9C27B0, 15%), "JS", #888, "" );}
	}
	
	&.dark {
		&.ico-csv .ico:after { @include do-icon(#3a3b3c, desaturate(#05ad9d, 15%), "CSV", #ddd, "" );}
		&.ico-txt .ico:after { @include do-icon(#3a3b3c,desaturate(#8BC34A, 15%), "TXT", #ddd, "" );}
		&.ico-rtf .ico:after { @include do-icon(#3a3b3c,desaturate(#CDDC39, 15%), "RTF", #ddd, "" );}
		&.ico-doc .ico:after { @include do-icon(#3a3b3c,desaturate(#FFC107, 15%), "DOC", #ddd, "" );}
		&.ico-docx .ico:after { @include do-icon(#3a3b3c,desaturate(#F44336, 15%), "DOCX", #ddd, "" );}
		&.ico-flac .ico:after { @include do-icon(#3a3b3c,desaturate(#E91E63, 15%), "FLAC", #ddd, "" );}
		&.ico-js  .ico:after { @include do-icon(#3a3b3c,desaturate(#9C27B0, 15%), "JS", #ddd, "" );}
		&.ico-php  .ico:after { @include do-icon(#3a3b3c,desaturate(#3F51B5, 15%), "PHP", #ddd, "" );}
	}

	&.double {
		.ico:after {
			filter: drop-shadow( 0 0 2px rgba(0, 0, 0, 0.2) );
		}		
		&.ico-avi .ico:after { @include do-icon(#F44336, #3a3b3c, "AVI", #f1f2f2, "");}
		&.ico-mp4 .ico:after { @include do-icon(#8BC34A, #3a3b3c, "MP4", #f1f2f2, "");}
		&.ico-mkv .ico:after { @include do-icon(#bdcc2b, #3a3b3c, "MKV", #f1f2f2, "");}
		&.ico-mpeg .ico:after{ @include do-icon(#FFC107, #3a3b3c, "MPEG", #f1f2f2, "");}
		&.ico-mov .ico:after { @include do-icon(#05ad9d, #3a3b3c, "MOV", #f1f2f2, "");}
		&.ico-flv .ico:after { @include do-icon(#E91E63, #3a3b3c, "FLV", #f1f2f2, "");}
		&.ico-swf .ico:after { @include do-icon(#9C27B0, #3a3b3c, "SWF", #f1f2f2, "");}
		&.ico-wmv .ico:after { @include do-icon(#8BC34A, #3a3b3c, "WMV", #f1f2f2, "");}
	}
}


