// CONFIGURATION
$icon-container-size: 110px; // the size of the icons
$icon-edge-color: ""; // the default edge color of the icon
$font-size: 39.5; // the font size of the text incapsulated inside the svg icon relative to the 200px height of the original svg 


// ATTENTION write hex in extended notation
$shape-color: #F1F2F2; // the color of the shape inside the icon (if any)
$shape-color-positive: #666666;  // the color of the shape when the icon have a positive background (es. white)
$dark-color: #3a3b3c; // background color of the icons in the dark theme (or the ribbon color in the "double" $style theme  )
$icon-shadow: ""; // or "drop-shadow( 0 2px 2px rgba(0, 0, 0, 0.25) );" without quotes
$font-color: $shape-color; // default 

// CHOOSE YOUR THEME
//
//
$style: ""; // icon theme -> possible values: default || dark || light || double

// Import icons
@import "scss/fonts";

// Colors (used when another color isn't specified)
@import "scss/generator-colors";

// Icons (the corrispong ascii)
@import "scss/generator-vars";

// DO-ICON MIXIN
@import "scss/mixin";

// HARDCODED styles
// This part serves for the demo and can be safely canceled
// However, if you need a particular icon you can write the code like in the examples below
//
@import "scss/hardcoded";

//
// LOOP CONFIG
// The loop will generate icons as in the configuration below
//
$icon-list:
(mime-icons, aac,  "", $audio),
(mime-icons, abw,  "", $settings),
(mime-icons, arc,  "", $locked),
(mime-icons, apk,  "", $apk),
(mime-icons, azw,  "", $flag),
(mime-icons, avi,  "", $play),
(mime-icons, bin,  "", $work),
(mime-icons, bz,   "", $zip),
(mime-icons, bz2,  "", $zip),
(mime-icons, csh,  "", $malware),
(mime-icons, css,  "", $stylez),
(mime-icons, csv,  "", $code),
(mime-icons, doc,  hsl(210,90%,40%), $text),
(mime-icons, eot,  "", $attachment),
(mime-icons, epub, "", $epub),
(mime-icons, gif,  "", $picture),
(mime-icons, html, "", $code),
(mime-icons, ico,  "", $app), 
(mime-icons, ics,  "", $cloud),
(mime-icons, usb,  "", $usb),
(mime-icons, js,  "", $malware),
(mime-icons, jar,  "", $radio),
(mime-icons, txt,  "", $text),
(mime-icons, php,  "", $code),
(mime-icons, flac,  "", $lp),
(mime-icons, wma,  "", $radio),
(mime-icons, mp3,  "", $music),
(mime-icons, pcm,  "", $mic),
(mime-icons, aiff,  "", $audio),
(mime-icons, ogg,  "", $play),
(mime-icons, wav,  "", $audio),
(mime-icons, rtf,   "", $text),
(mime-icons, docx,  "", $text),
(mime-icons, mp4,  "", $play),
(mime-icons, mov,  "", $movie),
(mime-icons, flv,  "", $cam),
(mime-icons, swf,  "", $malware),
(mime-icons, mpeg,  "", $movie),
(mime-icons, wmv, "", $play),
(mime-icons, mkv,  "", $cam);


////// basic style
//////

.mime-icon {
  margin: 0;
  display: inline-block;
  vertical-align:top;
  position: relative;

  .ico {
    position:relative;

    &:before{
      position: absolute;
      top: $icon-container-size / 2.7;
      display:block;
      width:100%;
      overflow: visible;
      z-index:9;
      content:'';
      font-family: 'Material Icons';
      font-size: $icon-container-size / 4.2;
      opacity: 0.8;    
    }
    

    &:after{
      width: $icon-container-size;
      height: $icon-container-size;
      display:inline-block;
      content:'';

      background-size: 80%;
      background-position: center;
      background-repeat: no-repeat;
      @include do-icon();
    }
  }
  
  &.light {
    .ico:before{ color: $shape-color-positive !important;}
    .ico:after { filter: drop-shadow( 0 2px 2px rgba(0, 0, 0, 0.25) );}  
  }
  
  &.dark {
    .ico:before{ color: $shape-color !important;}
    .ico:after { filter: "";}
  }
  
  &.double {
    .ico:after { filter: drop-shadow( 0 1px 1px rgba(0, 0, 0, 0.25) );} 
  }
  
  i.material-icons {
    position: absolute;
    top: 33%;
    left: 0;
    right: 0;
    font-size: 28px;
    color: $shape-color;
    opacity: 0.8;
  }
}

////// "Each" nÂ°1 icon with Google font icon
//////
//////
@import "scss/loop";



